[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(Day4.BingoTest, org.scalatest.tools.Framework$$anon$1@68559b66, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(Day3.PowerConsumptionTest, org.scalatest.tools.Framework$$anon$1@68559b66, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(Day6.LanternfishTest, org.scalatest.tools.Framework$$anon$1@68559b66, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(Day7.WhaleTreacheryTest, org.scalatest.tools.Framework$$anon$1@68559b66, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(Day1.DepthIncrementTest, org.scalatest.tools.Framework$$anon$1@68559b66, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(Day2.DiveDepthTest, org.scalatest.tools.Framework$$anon$1@68559b66, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(Day5.HydrothermalVentureTest, org.scalatest.tools.Framework$$anon$1@68559b66, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mDiveDepthTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- down[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- up[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- up and down[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- example calculation should equal 150[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate depth given input file[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- depth remains 0 without aim[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- aim exists and expected calculation result[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- gets expected dive depth with aim of given example[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate depth with aim given input file[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mLanternfishTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- initial state[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- day 1[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- day 2[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- day 3[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- day 18[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- day 80[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- count after 80 days with input file initial state[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- initial state efficient func[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- coount fish 2[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- coount fish 80[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mPowerConsumptionTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate first most common bit[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate second most common bit[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate third most common bit[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate fourth most common bit[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate fifth most common bit[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate gamma rate[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate epsilon rate[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- power consumption matches example[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate power consumption in file[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- oxygen rating with 1 value[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- oxygen rating with various values[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- oxygen rating matches example[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- cO2 rating with one value[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- cO2 rating with various values[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- CO2 rating matches example[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- get life supporting rate of example[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- get life supporting rate in input file[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mBingoTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- test bingo by checking marked rows[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- test bingo by checking marked columns[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate winner index[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- get sum of unmarked numbers from the winning board[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- get first winner score from file[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- last board winner[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mHydrothermalVentureTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- set point in grid[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- set all points in grid[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- matches example[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mDepthIncrementTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- no increments[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- one increment[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- a few increments[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- given example matches expected increment 7[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- get depth increments from input file[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- sliding window given example matches expected increment 5[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- get sliding window depth increments from input file[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mWhaleTreacheryTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate fuel given alignment equals 2[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate fuel given alignment equals 3[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate cheapest fuel given all possible combinations[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate cheapest fuel given file input[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- calculate fuel with changingRate[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- lowest fuel cost with changing rate to match example[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- lowest fuel cost from input file with changing rate *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  96708205 did not equal 168 (WhaleTreacheryTest.scala:38)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 365 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 59[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 7, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 58, failed 1, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m*** 1 TEST FAILED ***[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mPassed tests:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Day4.BingoTest[0m
[0m[[0m[0mdebug[0m] [0m[0m	Day1.DepthIncrementTest[0m
[0m[[0m[0mdebug[0m] [0m[0m	Day2.DiveDepthTest[0m
[0m[[0m[0mdebug[0m] [0m[0m	Day5.HydrothermalVentureTest[0m
[0m[[0m[0mdebug[0m] [0m[0m	Day6.LanternfishTest[0m
[0m[[0m[0mdebug[0m] [0m[0m	Day3.PowerConsumptionTest[0m
[0m[[0m[31merror[0m] [0m[0mFailed tests:[0m
[0m[[0m[31merror[0m] [0m[0m	Day7.WhaleTreacheryTest[0m
[0m[[0m[31merror[0m] [0m[0m(Test / [31mtest[0m) sbt.TestsFailedException: Tests unsuccessful[0m
